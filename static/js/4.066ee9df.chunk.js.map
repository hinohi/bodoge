{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../src/comlink.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","twice/worker.ts","twice/app.tsx"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","_setPrototypeOf","p","setPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","Parent","args","Class","a","apply","instance","Function","bind","arguments","_toConsumableArray","arrayLikeToArray","iter","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","MessageChannel","port1","port2","expose","deserialize","port","start","wrap","Error","isError","message","stack","serialized","assign","ep","self","addEventListener","callback","ev","data","returnValue","path","id","type","argumentList","map","fromWireValue","parent","reduce","prop","rawValue","transfer","Promise","resolve","catch","then","toWireValue","wireValue","transferables","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","proxy","get","_target","requestResponseMessage","r","set","_thisArg","rawArgumentList","last","processArguments","processed","v","concat","transferCache","WeakMap","transfers","allowArrayLike","it","F","s","f","normalCompletion","didErr","step","_e2","handler","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","module","exports","wasm","Comlink","Worker","Twice","useState","loaded","setLoaded","setValue","useEffect","initialize","className","onClick","twice"],"mappings":"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","file":"static/js/4.066ee9df.chunk.js","sourcesContent":["import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer(obj: any, transfers: Transferable[]) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","module.exports = __webpack_public_path__ + \"twice.63fb527b1224a4fea77a.worker.js\"","import React, {useEffect, useState} from 'react';\nimport * as Comlink from 'comlink';\n\nconst wasm = Comlink.wrap<import('./worker').ModuleType>(new Worker('./worker', {\n  name: 'twice',\n  type: 'module',\n}));\n\nfunction Twice() {\n  const [loaded, setLoaded] = useState(false);\n  const [value, setValue] = useState(1);\n\n  useEffect(() => {\n    wasm.initialize().then(() => setLoaded(true));\n  }, [loaded]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <p>{value}</p>\n        <button\n          onClick={() => {\n            if (loaded) {\n              wasm.twice(value).then(setValue);\n            }\n          }}\n        >\n          x2\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Twice;\n"],"sourceRoot":""}