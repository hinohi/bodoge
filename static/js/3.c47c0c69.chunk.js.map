{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","svg.tsx","button.tsx","select.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../src/comlink.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","workerHook.ts","connect-four/worker.ts","connect-four/app.tsx"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","_slicedToArray","arr","i","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","_arrayLikeToArray","len","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","Svg","props","version","xmlns","width","height","children","Square","margin","size","x","y","rx","ry","fill","stroke","onClick","Cross","a","b","transform","centerX","centerY","Circle","cx","cy","r","strokeWidth","ResetButton","hasWinner","className","Select","onChange","e","parseInt","selected","disabled","isDisabled","items","map","s","_setPrototypeOf","p","setPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","Parent","args","Class","instance","Function","bind","_toConsumableArray","arrayLikeToArray","iter","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","MessageChannel","port1","port2","expose","deserialize","port","start","wrap","Error","isError","message","stack","serialized","assign","ep","self","addEventListener","callback","ev","data","returnValue","path","id","type","argumentList","fromWireValue","parent","reduce","prop","rawValue","transfer","Promise","resolve","catch","then","toWireValue","wireValue","transferables","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","proxy","get","_target","requestResponseMessage","set","_thisArg","rawArgumentList","last","processArguments","processed","v","concat","transferCache","WeakMap","transfers","allowArrayLike","it","F","f","normalCompletion","didErr","step","_e2","handler","msg","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","useWorker","createWorker","useState","worker","setWorker","useMemo","initialized","setInitialize","calculating","setCalculating","useEffect","initialize","terminate","module","exports","Worker","Column","col","row","Fragment","Board","cell_size","cols","init","player","board","history","winner","judged","reducer","state","action","side","position","score","c","ConnectFour","status","playerMaster","limit","expansion_threshold","wasm","cancel","useReducer","A","B","dispatch","handlePlayerChange","mctree","console","error","calculateWinner","h","reverse"],"mappings":"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","file":"static/js/3.c47c0c69.chunk.js","sourcesContent":["import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, {ReactElement, ReactNode} from 'react';\n\nexport interface SvgProps {\n  readonly width: number\n  readonly height: number\n}\n\nexport function Svg(props: SvgProps & Readonly<{ children?: ReactNode[] }>): ReactElement {\n  return (\n    <svg\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={props.width}\n      height={props.height}\n    >\n      {props.children}\n    </svg>\n  );\n}\n\nexport interface SquareProps {\n  readonly x: number\n  readonly y: number\n  readonly size: number\n  readonly onClick?: () => void\n}\n\nexport function Square(props: SquareProps): ReactElement {\n  const margin = props.size / 50;\n  return (\n    <rect\n      x={props.x + margin}\n      y={props.y + margin}\n      width={props.size - margin * 2}\n      height={props.size - margin * 2}\n      rx={margin * 3}\n      ry={margin * 3}\n      fill=\"rgba(0, 0, 0, 0)\"\n      stroke=\"#111111\"\n      onClick={props.onClick}\n    />\n  );\n}\n\nexport interface CellMarkProps {\n  readonly centerX: number\n  readonly centerY: number\n  readonly size: number\n}\n\nexport function Cross(props: CellMarkProps): ReactElement {\n  const a = props.size * 0.9;\n  const b = props.size * 0.1;\n  return (\n    <g\n      fill=\"#53B0FF\"\n      transform={`rotate(45 ${props.centerX} ${props.centerY})`}\n    >\n      <rect\n        x={props.centerX - a / 2}\n        y={props.centerY - b / 2}\n        rx={b / 2}\n        width={a}\n        height={b}\n      />\n      <rect\n        x={props.centerX - b / 2}\n        y={props.centerY - a / 2}\n        ry={b / 2}\n        width={b}\n        height={a}\n      />\n    </g>\n  );\n}\n\nexport function Circle(props: CellMarkProps): ReactElement {\n  return (\n    <circle\n      cx={props.centerX}\n      cy={props.centerY}\n      r={props.size / 3.5}\n      fill=\"none\"\n      stroke=\"#FF972D\"\n      strokeWidth={props.size / 10}\n    />\n  );\n}\n","import React from 'react';\n\nexport function ResetButton(props: Readonly<{ hasWinner: boolean, onClick: () => void }>) {\n  if (props.hasWinner) {\n    return (\n      <button className=\"button is-primary\" onClick={props.onClick}>\n        Reset\n      </button>\n    );\n  } else {\n    return (\n      <button className=\"button is-danger\" onClick={props.onClick}>\n        Reset\n      </button>\n    );\n  }\n}\n","import React from \"react\";\n\ninterface SelectProps {\n  readonly items: ReadonlyArray<string>\n  readonly isDisabled: boolean\n  readonly selected: number\n  readonly onChange: (i: number) => void\n}\n\nexport function Select(props: SelectProps) {\n  return (\n    <div className=\"select\">\n      <select\n        onChange={(e) => props.onChange(parseInt(e.target.value))}\n        value={props.selected}\n        disabled={props.isDisabled}\n      >\n        {props.items.map((s, i) => (\n          <option key={i} value={i}>\n            {s}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import {useEffect, useMemo, useState} from 'react';\nimport {wrap, Remote} from 'comlink';\n\ninterface ModuleType {\n  initialize(): Promise<void>;\n}\n\nexport function useWorker<T extends ModuleType>(createWorker: () => Worker): [boolean, (calculating: boolean) => void, Remote<T>, () => void] {\n  const [worker, setWorker] = useState(createWorker);\n  const proxy = useMemo(() => wrap<T>(worker), [worker]);\n  const [initialized, setInitialize] = useState(false);\n  const [calculating, setCalculating] = useState(true);\n\n  useEffect(() => {\n    if (initialized) return;\n    proxy.initialize().then(() => {\n      setInitialize(true);\n      setCalculating(false);\n    });\n  }, [initialized, calculating, proxy]);\n\n  function cancel(): void {\n    worker.terminate();\n    setCalculating(true);\n    setWorker(createWorker());\n    setInitialize(false);\n  }\n\n  return [calculating, setCalculating, proxy, cancel];\n}\n","module.exports = __webpack_public_path__ + \"connect-four.e2eb4747a4cd2d662e75.worker.js\"","import React, {useEffect, useMemo, useReducer} from 'react';\n\nimport {Svg, Cross, Circle, Square} from '../svg';\nimport {ResetButton} from '../button';\nimport {Select} from '../select';\nimport {useWorker} from '../workerHook';\nimport {ModuleType} from './worker';\n\n\nfunction createWorker(): Worker {\n  return new Worker('./worker', {\n    name: 'connect-four',\n    type: 'module',\n  });\n}\n\ntype Side = 'A' | 'B';\n\ninterface BoardBase {\n  readonly cols: ReadonlyArray<ReadonlyArray<Side>>\n}\n\ninterface BoardState extends BoardBase {\n  readonly next: Side\n  readonly history: ReadonlyArray<{\n    readonly position: number\n    readonly score?: string\n  }>\n}\n\ninterface BoardProps extends BoardBase {\n  readonly onClick: (i: number) => void\n}\n\ninterface ColumnProps {\n  readonly col: ReadonlyArray<Side>\n  readonly size: number\n  readonly x: number\n  readonly onClick: () => void\n}\n\nfunction Column(props: ColumnProps): React.ReactElement {\n  const col: React.ReactElement[] = [];\n  const cx = props.x + props.size / 2;\n  for (let row = 0; row < 6; row++) {\n    const y = (5 - row) * props.size;\n    const cy = y + props.size / 2;\n    col.push(<Square x={props.x} y={y} size={props.size} onClick={props.onClick} key={row * 2}/>);\n    switch (props.col[row]) {\n      case 'A':\n        col.push(<Cross centerX={cx} centerY={cy} size={props.size} key={row * 2 + 1}/>);\n        break;\n      case 'B':\n        col.push(<Circle centerX={cx} centerY={cy} size={props.size} key={row * 2 + 1}/>);\n        break;\n    }\n  }\n  return (\n    <React.Fragment>\n      {col}\n    </React.Fragment>\n  );\n}\n\nfunction Board(props: BoardProps): React.ReactElement {\n  const cell_size = 100;\n  return (\n    <Svg width={cell_size * 7} height={cell_size * 6}>\n      {props.cols.map((col, i) => {\n        const x = cell_size * i;\n        return (<Column col={col} size={cell_size} x={x} onClick={() => props.onClick(i)} key={i}/>);\n      })}\n    </Svg>\n  )\n}\n\nfunction put(board: BoardState, position: number, score?: string): BoardState {\n  const cols = board.cols.map((c, i) => {\n    if (position === i) {\n      const s = c.slice();\n      s.push(board.next);\n      return s;\n    } else {\n      return c;\n    }\n  });\n  return {\n    cols,\n    next: board.next === 'A' ? 'B' : 'A',\n    history: board.history.concat([{position, score}])\n  };\n}\n\ninterface SearchResponse {\n  readonly position?: number\n  readonly score: string\n}\n\ninterface HumanPlayer {\n  readonly type: 'Human'\n  readonly name: string\n}\n\ninterface McTreePlayer {\n  readonly type: 'MCTree'\n  readonly name: string\n  readonly limit: number\n  readonly expansion_threshold: number\n  readonly c: number\n}\n\ntype Player =\n  | HumanPlayer\n  | McTreePlayer;\n\ntype Winner = Side | 'F' | null;\n\ninterface ConnectFourState {\n  readonly board: BoardState\n  readonly key: number\n  readonly winner: Winner\n  readonly judged: boolean\n  readonly player: { [P in Side]: number }\n}\n\ntype Action =\n  | { type: 'reset' }\n  | { type: 'change_player', side: Side, id: number }\n  | { type: 'put', key: number, side: Side, position: number, score?: string }\n  | { type: 'judge', key: number, winner: Winner }\n  ;\n\nfunction init(player: { [P in Side]: number }): ConnectFourState {\n  return {\n    board: {\n      cols: [[], [], [], [], [], [], []],\n      next: 'A',\n      history: [],\n    },\n    key: Math.random(),\n    winner: null,\n    judged: true,\n    player,\n  };\n}\n\nfunction reducer(state: ConnectFourState, action: Action): ConnectFourState {\n  switch (action.type) {\n    case 'reset':\n      return init(state.player);\n    case 'change_player':\n      if (state.player[action.side] === action.id) return state;\n      return init({...state.player, [action.side]: action.id});\n    case 'put':\n      if (action.key !== state.key) return state;\n      if (state.board.next !== action.side) return state;\n      if (state.winner) return state;\n      if (!state.judged) return state;\n      if (state.board.cols[action.position].length >= 6) return state;\n      return {\n        ...state,\n        board: put(state.board, action.position, action.score),\n        judged: false,\n      };\n    case 'judge':\n      if (action.key !== state.key) return state;\n      return {\n        ...state,\n        winner: action.winner,\n        judged: true,\n      };\n  }\n}\n\nfunction ConnectFour(): React.ReactElement {\n  const playerMaster = useMemo<ReadonlyArray<Player>>(() => [\n    {\n      type: 'Human',\n      name: 'Human',\n    },\n    {\n      type: 'MCTree',\n      name: 'MCTree (200ms)',\n      limit: 200,\n      expansion_threshold: 2,\n      c: 2.0,\n    },\n    {\n      type: 'MCTree',\n      name: 'MCTree (3s)',\n      limit: 3000,\n      expansion_threshold: 2,\n      c: 2.0,\n    },\n  ], []);\n\n  const [calculating, setCalculating, wasm, cancel] = useWorker<ModuleType>(createWorker);\n  const [state, dispatch] = useReducer(reducer, init({A: 0, B: 0}));\n\n  useEffect(() => {\n    if (calculating) return;\n    if (state.winner) return;\n    if (state.judged) {\n      const side = state.board.next;\n      const player = playerMaster[state.player[side]];\n      switch (player.type) {\n        case 'Human':\n          break;\n        case 'MCTree':\n          const key = state.key;\n          setCalculating(true);\n          wasm.mctree({cols: state.board.cols}, player.limit, player.expansion_threshold, player.c)\n            .then((r: SearchResponse) => {\n              if (typeof r.position === 'number') {\n                dispatch({type: 'put', key, side, position: r.position, score: r.score});\n              } else {\n                console.error(r);\n              }\n              setCalculating(false);\n            }).catch((err: any) => console.error(err));\n          break;\n      }\n    } else {\n      setCalculating(true);\n      const key = state.key;\n      wasm.calculateWinner({cols: state.board.cols}).then((winner: Winner) => {\n        dispatch({type: 'judge', key, winner});\n        setCalculating(false);\n      }).catch((err: any) => console.error(err));\n    }\n  }, [calculating, playerMaster, state, setCalculating, wasm]);\n\n  function handleClick(i: number): void {\n    if (state.board.cols[i].length >= 6) return;\n    const side = state.board.next;\n    if (playerMaster[state.player[side]].type === 'Human') {\n      dispatch({type: 'put', key: state.key, side, position: i});\n    }\n  }\n\n  function handlePlayerChange(side: Side, id: number): void {\n    if (state.player[side] !== id) {\n      cancel();\n      dispatch({type: 'change_player', side, id});\n    }\n  }\n\n  function resetBoard(): void {\n    cancel();\n    dispatch({type: 'reset'});\n  }\n\n  let status;\n  if (state.winner === null) {\n    status = `next player: ${state.board.next}`;\n  } else if (state.winner === 'F') {\n    status = 'draw';\n  } else {\n    status = `winner: ${state.winner}`\n  }\n\n  const history = state.board.history.map((h, i) => {\n    const n = `(${i + 1})`;\n    if (h.score != null) {\n      return <li key={i}>{n} {'AB'[i % 2]}: pos={h.position} score={h.score}</li>\n    } else {\n      return <li key={i}>{n} {'AB'[i % 2]}: pos={h.position}</li>\n    }\n  }).reverse();\n\n  return (\n    <div className=\"container\">\n      <div className=\"content is-flex-direction-row\">\n        X\n        <Select\n          items={playerMaster.map((p) => p.name)}\n          selected={state.player.A}\n          isDisabled={false}\n          onChange={(i) => handlePlayerChange('A', i)}\n        />\n        vs\n        <Select\n          items={playerMaster.map((p) => p.name)}\n          selected={state.player.B}\n          isDisabled={false}\n          onChange={(i) => handlePlayerChange('B', i)}\n        />\n        O\n      </div>\n      <div className=\"content\">\n        <Board onClick={handleClick} cols={state.board.cols}/>\n      </div>\n      <div className=\"content\">\n        <p>{status}</p>\n      </div>\n      <div className=\"content\">\n        <ResetButton hasWinner={state.winner !== null} onClick={resetBoard}/>\n      </div>\n      <div className=\"content\">\n        <ul>{history}</ul>\n      </div>\n    </div>\n  );\n}\n\nexport default ConnectFour;\n"],"sourceRoot":""}